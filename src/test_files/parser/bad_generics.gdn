// This should be `fun<T> foo()`. Ideally we'd show a better parse
// error message here, but parsing should at least terminate.
fun foo<T>(value: T): Unit {
}

// args: dump-ast
// expected stdout:
// Fun(
//     Symbol"foo",
//     FunInfo {
//         src_string: SourceString,
//         doc_comment: Some(
//             "This should be `fun<T> foo()`. Ideally we'd show a better parse\nerror message here, but parsing should at least terminate.",
//         ),
//         name_sym: Some(
//             Symbol"foo",
//         ),
//         type_params: [],
//         params: [
//             SymbolWithHint {
//                 symbol: Symbol"__placeholder",
//                 hint: None,
//             },
//         ],
//         return_hint: None,
//         body: Block {
//             open_brace: Position { ... },
//             exprs: [],
//             close_brace: Position { ... },
//         },
//     },
// )
// BinaryOperator(
//     Expression {
//         pos: Position { ... },
//         expr_: Invalid,
//         value_is_used: true,
//         id: SyntaxId(2),
//     },
//     LessThan,
//     Expression {
//         pos: Position { ... },
//         expr_: Variable(
//             Symbol"T",
//         ),
//         value_is_used: true,
//         id: SyntaxId(4),
//     },
// )
// BinaryOperator(
//     Expression {
//         pos: Position { ... },
//         expr_: Invalid,
//         value_is_used: true,
//         id: SyntaxId(6),
//     },
//     GreaterThan,
//     Expression {
//         pos: Position { ... },
//         expr_: Variable(
//             Symbol"value",
//         ),
//         value_is_used: true,
//         id: SyntaxId(8),
//     },
// )
// Invalid

// expected stderr:
// Error: Parse error: Expected `(`, got `<`
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Invalid name: '<'
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Invalid syntax: Expected `,` or `)` here, but got `<`
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected `)`, got `<`
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected `{`, got `<`
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected an expression, got: `<`.
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected an expression, got: `>`.
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//          ^
// Error: Parse error: Expected `)`, got `:`
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^
// Error: Parse error: Expected an expression, got: `:`.
// 
// --> src/test_files/parser/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^

