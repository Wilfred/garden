external fun foo(x: Int, x: Int) {
    let (y, y) = (1, 2)

    let _f = fun(z, z) {}
}

// We allow repetition with _.
external fun bar(_: Int, _: Int, _: String) {
    let (_, _) = (1, 2)

    let _f = fun(_, _) {}
}

// args: check
// expected exit status: 1
// expected stdout:
// Error: Duplicate parameter `x`.
// ---| src/test_files/check/repeated_bindings.gdn:1:26
// 1  | external fun foo(x: Int, x: Int) {
// 2  |     let (y, y) = (1, 2)  ^
// 3  | 
// 
// Error: Duplicate variable  `y` in destructuring `let`.
// ---| src/test_files/check/repeated_bindings.gdn:2:13
// 1  | external fun foo(x: Int, x: Int) {
// 2  |     let (y, y) = (1, 2)
// 3  |             ^
// 4  |     let _f = fun(z, z) {}
// 
// Error: Duplicate parameter `z`.
// ---| src/test_files/check/repeated_bindings.gdn:4:21
// 2  |     let (y, y) = (1, 2)
// 3  | 
// 4  |     let _f = fun(z, z) {}
// 5  | }                   ^
// 6  | 
// 
// Warning: `x` is unused.
// ---| src/test_files/check/repeated_bindings.gdn:1:26
// 1  | external fun foo(x: Int, x: Int) {
// 2  |     let (y, y) = (1, 2)  ^
// 3  | 
// 
// Warning: `y` is unused.
// ---| src/test_files/check/repeated_bindings.gdn:2:13
// 1  | external fun foo(x: Int, x: Int) {
// 2  |     let (y, y) = (1, 2)
// 3  |             ^
// 4  |     let _f = fun(z, z) {}
// 
// Warning: `z` is unused.
// ---| src/test_files/check/repeated_bindings.gdn:4:21
// 2  |     let (y, y) = (1, 2)
// 3  | 
// 4  |     let _f = fun(z, z) {}
// 5  | }                   ^
// 6  |

