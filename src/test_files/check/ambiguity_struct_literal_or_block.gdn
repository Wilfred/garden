external fun foo(): Unit {
  // We solve this ambiguity by requiring braces to touch for struct
  // literals.
  while SomeStruct{} {}

  while SomeValue {}

  // This is therefore a syntax error, because SomeValue cannot be a
  // struct literal.
  {}
}

// args: check
// expected exit status: 1
// expected stdout:
// Error: Expected an expression, got: `{`.
// ---| src/test_files/check/ambiguity_struct_literal_or_block.gdn:10:3
// 8  |   // This is therefore a syntax error, because SomeValue cannot be a
// 9  |   // struct literal.
// 10 |   {}
//    |   ^
// 11 | }
// 12 | 
// 
// Error: Expected `}`, got `{`
// ---| src/test_files/check/ambiguity_struct_literal_or_block.gdn:10:3
// 8  |   // This is therefore a syntax error, because SomeValue cannot be a
// 9  |   // struct literal.
// 10 |   {}
//    |   ^
// 11 | }
// 12 | 
// 
// Error: Expected an expression, got: `}`.
// ---| src/test_files/check/ambiguity_struct_literal_or_block.gdn:11:1
// 9  |   // struct literal.
// 10 |   {}
// 11 | }
//    | ^
// 12 | 
// 13 | // args: check
// 
// Error: No such type `SomeStruct`.
// ---| src/test_files/check/ambiguity_struct_literal_or_block.gdn:4:9
// 2  |   // We solve this ambiguity by requiring braces to touch for struct
// 3  |   // literals.
// 4  |   while SomeStruct{} {}
//    |         ^^^^^^^^^^
// 5  | 
// 6  |   while SomeValue {}
// 
// Error: Unbound symbol: `SomeValue`
// ---| src/test_files/check/ambiguity_struct_literal_or_block.gdn:6:9
// 4  |   while SomeStruct{} {}
// 5  | 
// 6  |   while SomeValue {}
//    |         ^^^^^^^^^
// 7  | 
// 8  |   // This is therefore a syntax error, because SomeValue cannot be a

