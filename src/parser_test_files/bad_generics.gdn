// This should be `fun<T> foo()`. Ideally we'd show a better parse
// error message here, but parsing should at least terminate.
fun foo<T>(value: T): Unit {
}

// args: dump-ast
// expected stdout:
// Fun(
//     Symbol"foo",
//     FunInfo {
//         src_string: SourceString,
//         doc_comment: Some(
//             "This should be `fun<T> foo()`. Ideally we'd show a better parse\nerror message here, but parsing should at least terminate.",
//         ),
//         name_sym: Some(
//             Symbol"foo",
//         ),
//         type_params: [],
//         params: [
//             SymbolWithHint {
//                 symbol: Symbol"__placeholder",
//                 hint: None,
//             },
//         ],
//         return_hint: None,
//         body: Block {
//             is_loop_body: false,
//             open_brace: Position { ... },
//             exprs: [
//                 Expression {
//                     pos: Position { ... },
//                     expr_: BinaryOperator(
//                         Expression {
//                             pos: Position { ... },
//                             expr_: Invalid,
//                             value_is_used: true,
//                             id: SyntaxId(2),
//                         },
//                         LessThan,
//                         Expression {
//                             pos: Position { ... },
//                             expr_: Variable(
//                                 Symbol"T",
//                             ),
//                             value_is_used: true,
//                             id: SyntaxId(4),
//                         },
//                     ),
//                     value_is_used: false,
//                     id: SyntaxId(5),
//                 },
//                 Expression {
//                     pos: Position { ... },
//                     expr_: BinaryOperator(
//                         Expression {
//                             pos: Position { ... },
//                             expr_: Invalid,
//                             value_is_used: true,
//                             id: SyntaxId(6),
//                         },
//                         GreaterThan,
//                         Expression {
//                             pos: Position { ... },
//                             expr_: Variable(
//                                 Symbol"value",
//                             ),
//                             value_is_used: true,
//                             id: SyntaxId(8),
//                         },
//                     ),
//                     value_is_used: true,
//                     id: SyntaxId(9),
//                 },
//             ],
//             close_brace: Position { ... },
//         },
//     },
// )
// Invalid

// expected stderr:
// Error: Parse error: Expected `(`, got `<`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Invalid name: '<'
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Invalid syntax: Expected `,` or `)` here, but got `<`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected `)`, got `<`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected `{`, got `<`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected an expression, got: `<`.
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//        ^
// Error: Parse error: Expected an expression, got: `>`.
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//          ^
// Error: Parse error: Expected `)`, got `:`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^
// Error: Parse error: Expected an expression, got: `:`.
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^
// Error: Parse error: Expected `}`, got `:`
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^
// Error: Parse error: Expected an expression, got: `:`.
// 
// --> src/parser_test_files/bad_generics.gdn:3
// fun foo<T>(value: T): Unit {
//                 ^

