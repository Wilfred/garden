#!/usr/bin/env -S garden run

fun lines(s) {
  let parts = [];

  let line_start = 0;
  let i = 0;
  while (i < string_length(s)) {
    let char = string_substring(s, i, i + 1);

    if (char == "\n") {
      parts = list_append(parts, string_substring(s, line_start, i));
      line_start = i + 1;
    }

    i = i + 1;
  }

  // Append last line if it wasn't terminated with a newline.
  if (line_start != string_length(s)) {
    parts = list_append(parts,
      string_substring(s, line_start, string_length(s)));
  }

  parts;
}

fun list_filter(items, f) {
  let result = [];

  let i = 0;
  while (i < list_length(items)) {
    let item = list_get(items, i);

    if (f(item)) {
      result = list_append(result, item);
    }

    // todo: handle parse errors better if this semicolon is missing.
    i = i + 1;
  }
  result;
}

fun in_git_repo() {
  let git_dir_path = string_concat(working_directory(), "/.git");
  path_exists(git_dir_path);
}

fun main(args) {
  dbg(args);

  if (in_git_repo()) {
    list_filter([1, 2, 3, 4], fun(x) { x > 2; });

    dbg(lines(shell("git", ["for-each-ref", "--format=%(refname:short)", "refs/heads/"])));
  } else {
    print("Not in a git repository.");
  }
}
