export fun foo(x: Option<Int>) {
    // This is OK.
    match x {
        Some(_) => {}
        _ => {}
    }

    // Matching on NoValue is harmless.
    match todo() {
        Some(_) => {}
        None => {}
    }

    // Missing None.
    match x {
        Some(_) => {}
    }

    // Duplicate.
    match x {
        Some(_) => {}
        None => {}
        None => {}
    }

}

// args: check
// expected exit status: 1
// expected stdout:
// Warning: Unfinished code.
// --> src/test_files/check/type_error_missing_case.gdn:9
//     match todo() {
//           ^^^^^^
// 
// Error: This match expression does not cover all the cases of `Option`. It's missing `None`.
// --> src/test_files/check/type_error_missing_case.gdn:15
//     match x {
//           ^
// 
// Error: Duplicate case in pattern match.
// --> src/test_files/check/type_error_missing_case.gdn:23
//         None => {}
//         ^^^^

